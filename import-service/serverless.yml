
app:  import-service
service: import-service
frameworkVersion: '3'
useDotenv: true

custom:
  bucketName: yura703-task5
  jest:

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1 

  iamRoleStatements:
    - Effect: "Allow"
      Action: 's3:PutObject'
      Resource:
        - arn:aws:s3:::yura703-task5
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - arn:aws:s3:::yura703-task5/*
    - Effect: 'Allow'
      Action: 'sqs:*'
      Resource:
        - Fn::GetAtt: [SQSQueue, Arn]
    - Effect: 'Allow'
      Action: 'sns:*'
      Resource:
        Ref: SNSTopic    

  environment:
    SQL_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

package:
  patterns:
    - '!node_modules/**' # no need to add this, this plugin does it for you
  individually: true
  excludeDevDependencies: false

plugins:
  - serverless-plugin-common-excludes # this should go before serverless-plugin-include-dependencies
  - serverless-plugin-include-dependencies 

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: yura703-queue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: yura703-topic
    SNSSsubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: lyurik1978@gmail.com 
        Protocol: email
        TopicArn:
          Ref: SNSTopic  

functions:
  importProductsFile:
    handler: functions/importProductsFile.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          authorizer:
            name: tokenAuthorizer
            arn: arn:aws:lambda:eu-west-1:188030080420:function:authorization-service-dev-basicAuthorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

  importFileParser:
    handler: functions/importFileParser.importFileParser
    events:
      - s3: 
        bucket: yura703-task5
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploaded/ 

  catalogBatchProcess:
    handler: functions/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 4
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn         

  
  
  