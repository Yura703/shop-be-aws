
app:  import-service
service: import-service
frameworkVersion: '3'
useDotenv: true

custom:
  bucket: yura703-task5
  jest:

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1 
  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::yura703-task5"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::yura703-task5/*"

  environment:
    SQL_URL:
      Ref: SQSQueue

plugins:
  - serverless-jest-plugin  

package:
  individually: true

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: import-service-queue
    # SNSTopic:
    #   Type: AWS::SNS::Topic
    #   Properties:
    #     TopicName: createProductTopic
    # SNSSsubscription:
    #   Type: AWS::SNS::Subscription
    #   Properties:
    #     Endpoint: tiwbwit@gmail.com
    #     Protocol: email
    #     TopicArn:
    #       Ref: SNSTopic

  Outputs:
    SQSQueueArn:
      Value:
        Fn::GetAtt: [SQSQueue, Arn]
    SQSQueue:
      Value:
        Ref: SQSQueue  

functions:
  importProductsFile:
    handler: functions/importProductsFile.importProductsFile
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: functions/importFileParser.importFileParser
    events:
      - s3: 
        bucket: yura703-task5
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploaded/
          - suffix: .csv 
        existing: true      

  catalogBatchProcess:
    handler: functions/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 2
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn         
  
  
  